diff -Naur ghostscript-9.20.orig/configure.ac ghostscript-9.20/configure.ac
--- ghostscript-9.20.orig/configure.ac	2016-09-26 10:41:28.000000000 +0000
+++ ghostscript-9.20/configure.ac	2017-02-19 03:47:20.000000000 +0000
@@ -1810,7 +1810,7 @@
 EPSON_DEVS='eps9high eps9mid epson epsonc escp lp8000 lq850 photoex st800 stcolor alc1900 alc2000 alc4000 alc4100 alc8500 alc8600 alc9100 lp3000c lp8000c lp8200c lp8300c lp8500c lp8800c lp9000c lp9200c lp9500c lp9800c lps6500 epl2050 epl2050p epl2120 epl2500 epl2750 epl5800 epl5900 epl6100 epl6200 lp1800 lp1900 lp2200 lp2400 lp2500 lp7500 lp7700 lp7900 lp8100 lp8300f lp8400f lp8600 lp8600f lp8700 lp8900 lp9000b lp9100 lp9200b lp9300 lp9400 lp9600 lp9600s lps4500 eplcolor eplmono'
 CANON_DEVS='bj10e bj200 bjc600 bjc800 lbp8 lips3 bjcmono bjcgray bjccmyk bjccolor'
 LEXMARK_DEVS='lxm5700m lxm3200 lex2050 lex3200 lex5700 lex7000'
-BROTHER_DEVS='hl7x0 hl1240 hl1250'
+BROTHER_DEVS='hl7x0 hl1240 hl1250 mfc73x0'
 APPLE_DEVS='appledmp iwhi iwlo iwlq'
 IBM_DEVS='ibmpro jetp3852'
 OKI_DEVS='oki182 okiibm oki4w'
diff -Naur ghostscript-9.20.orig/contrib/contrib.mak ghostscript-9.20/contrib/contrib.mak
--- ghostscript-9.20.orig/contrib/contrib.mak	2016-09-26 10:41:28.000000000 +0000
+++ ghostscript-9.20/contrib/contrib.mak	2017-02-19 03:59:28.000000000 +0000
@@ -281,6 +281,22 @@
 	$(DEVCC) $(DEVO_)gdevgdi.$(OBJ) $(C_) $(CONTRIBSRC)gdevgdi.c
 
 
+### ------------------- The Brother MFC-7360N printer ------------------- ###
+### Forked off HL-1240 which is ljet4-compatible up to 600x600dpi         ###
+### without support for PCL compression and without 1200x600 mode         ###
+
+mfc73x0_=$(DEVOBJ)gdevmfc73x0.$(OBJ) $(HPDLJM)
+$(DD)mfc73x0.dev : $(mfc73x0_) $(DD)page.dev \
+                           $(CONTRIB_MAK) $(MAKEDIRS)
+	$(SETPDEV) $(DD)mfc73x0 $(mfc73x0_)
+
+# Author: aggi <aggi@padwalker.com>
+# Printer: Brother MFC-7360N (may work with some other models too)
+$(DEVOBJ)gdevmfc73x0.$(OBJ) : $(CONTRIBSRC)gdevmfc73x0.c $(PDEVH) $(gdevdljm_h) \
+                           $(CONTRIB_MAK) $(MAKEDIRS)
+	$(DEVCC) $(DEVO_)gdevmfc73x0.$(OBJ) $(C_) $(CONTRIBSRC)gdevmfc73x0.c
+
+
 ### ---------------- The Brother HL-1240/HL-1250 printers --------------- ###
 ### These printers are ljet4-compatible, plus support for source tray     ###
 ### selection and special 1200x600 dpi mode.                              ###
diff -Naur ghostscript-9.20.orig/contrib/gdevmfc73x0.c ghostscript-9.20/contrib/gdevmfc73x0.c
--- ghostscript-9.20.orig/contrib/gdevmfc73x0.c	1970-01-01 00:00:00.000000000 +0000
+++ ghostscript-9.20/contrib/gdevmfc73x0.c	2017-02-19 06:15:20.820074050 +0000
@@ -0,0 +1,265 @@
+/*
+   Contributors:
+     Created by aggi <aggi@padwalker.com>
+     Based on hl-1250 from Marek Michalkiewicz <marekm@amelek.gda.pl>
+
+   THIS SOFTWARE IS NOT COPYRIGHTED
+
+   This source code is offered for use in the public domain.  You may
+   use, modify or distribute it freely.
+
+   This code is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY.  ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
+   DISCLAIMED.  This includes but is not limited to warranties of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+   (Legalese borrowed from the Mingw32 runtime libraries.)
+ */
+
+/* 
+   removed 1200 upscale mode since it has no benefit except for headache
+   to make it work (stalled printouts)
+
+   removed support for PCL compression since it is broken with MFC-7360N 
+   (broken font rendering)
+
+   adapted margins to 0 0 0 0 to be set with cups PPD instead
+*/
+
+#include "gdevprn.h"
+#include "gdevdljm.h"
+
+/* PCL compression is broken with MFC7360N
+   disable it with custom PCL feature set */
+#define PCL_FEATURES \
+(PCL5_SPACING | PCL_CAN_SET_PAPER_SIZE | PCL_CAN_PRINT_COPIES)
+
+#ifndef X_DPI
+#  define X_DPI 600
+#endif
+
+#ifndef Y_DPI
+#  define Y_DPI 600
+#endif
+
+typedef enum {
+    ECONO_OFF = 0,
+    ECONO_25,
+    ECONO_50
+} hl1250_econo_t;
+
+typedef enum {
+    PTYPE_PLAIN = 0,
+    PTYPE_THIN,
+    PTYPE_THICK,
+    PTYPE_THICK2,
+    PTYPE_TRANS
+} hl1250_paper_t;
+
+typedef enum {
+    TRAY_AUTO = 0,
+    TRAY_DUAL,
+    TRAY_UPPER,
+    TRAY_LOWER,
+    TRAY_MANUAL
+} hl1250_tray_t;
+
+typedef struct gx_device_mfc73x0_s {
+    gx_device_common;
+    gx_prn_device_common;
+    hl1250_econo_t econo_mode;
+    hl1250_paper_t paper_type;
+    hl1250_tray_t source_tray;
+} gx_device_mfc73x0;
+
+static dev_proc_open_device(hl1250_open);
+static dev_proc_close_device(hl1250_close);
+static dev_proc_print_page_copies(hl1250_print_page_copies);
+static dev_proc_get_params(hl1250_get_params);
+static dev_proc_put_params(hl1250_put_params);
+
+static const gx_device_procs prn_hl1250_procs =
+prn_params_procs(hl1250_open, gdev_prn_output_page, hl1250_close,
+                 hl1250_get_params, hl1250_put_params);
+
+#define mfc73x0_device_copies(dname, xdpi, ydpi)\
+{   prn_device_std_body_copies(gx_device_mfc73x0, prn_hl1250_procs,\
+                               dname,\
+                               DEFAULT_WIDTH_10THS, DEFAULT_HEIGHT_10THS,\
+                               xdpi, ydpi,\
+                               0, 0, 0, 0,\
+                               1, hl1250_print_page_copies),\
+    ECONO_OFF, PTYPE_PLAIN, TRAY_AUTO\
+}
+
+const gx_device_mfc73x0 gs_mfc73x0_device =
+mfc73x0_device_copies("mfc73x0", X_DPI, Y_DPI);
+
+static int
+hl1250_open(gx_device * pdev)
+{
+    /* margins: left, bottom, right, top */
+    /* XXX - only A4 tested, letter size margins likely need to be tweaked */
+    static const float margins_a4_600[4] = {0.00, 0.00, 0.00, 0.00};
+    static const float margins_letter_600[4] = {0.00, 0.00, 0.00, 0.00};
+
+    int x_dpi = (int)((gx_device_printer *) pdev)->x_pixels_per_inch;
+    int paper_size = gdev_pcl_paper_size(pdev);
+
+    if (paper_size == PAPER_SIZE_A4)
+        gx_device_set_margins(pdev, margins_a4_600, false);
+    else
+        gx_device_set_margins(pdev, margins_letter_600, false);
+    return gdev_prn_open(pdev);
+}
+
+#define UEL "\033%-12345X"
+
+/* XXX - how to get the name of the job (PS file) being printed? */
+#define PJL_JOB_NAME "Ghost"
+
+static int
+hl1250_close(gx_device * pdev)
+{
+    int code = gdev_prn_open_printer(pdev, 1);
+    FILE *fp;
+
+    if (code < 0)
+        return code;
+    fp = ((gx_device_printer *) pdev)->file;
+    /* job separation, reset, UEL */
+    fputs("\033&l1T\033E", fp);
+    fputs(UEL, fp);
+    fprintf(fp, "@PJL EOJ NAME=\"%s\"\r\n", PJL_JOB_NAME);
+    fputs(UEL, fp);
+    return gdev_prn_close(pdev);
+}
+
+static int
+hl1250_print_page_copies(gx_device_printer * pdev, FILE * prn_stream,
+                         int num_copies)
+{
+    char page_init[1024];
+    int x_dpi = (int)pdev->x_pixels_per_inch;
+    int y_dpi = (int)pdev->y_pixels_per_inch;
+    const char *tray_pjl;
+    const char *tray_pcl;
+    const gx_device_mfc73x0 *hl1250 = (gx_device_mfc73x0 *) pdev;
+    hl1250_econo_t econo_mode = hl1250->econo_mode;
+    hl1250_paper_t paper_type = hl1250->paper_type;
+    hl1250_tray_t source_tray = hl1250->source_tray;
+    static const char * const onoff[2] = { "OFF", "ON" };
+    static const char * const papertypes[5] =
+        { "REGULAR", "THIN", "THICK", "THICK2", "TRANSPARENCY" };
+
+    tray_pjl = "AUTO";
+    tray_pcl = "";
+    switch (source_tray) {
+        case TRAY_DUAL:
+            tray_pcl = "\033&l0H";
+            break;
+        case TRAY_UPPER:
+            tray_pjl = "TRAY1";
+            tray_pcl = "\033&l1H";
+            break;
+        case TRAY_LOWER:
+            tray_pjl = "TRAY2";
+            tray_pcl = "\033&l5H";
+            break;
+        case TRAY_MANUAL:
+            tray_pcl = "\033&l2H";
+            break;
+        default:
+            break;
+    }
+    if (pdev->PageCount == 0) {
+        /* initialize printer */
+        fputs(UEL, prn_stream);
+        fputs("@PJL \r\n", prn_stream);
+        fprintf(prn_stream, "@PJL JOB NAME=\"%s\"\r\n", PJL_JOB_NAME);
+        fprintf(prn_stream, "@PJL SET ECONOMODE=%s\n", onoff[econo_mode != 0]);
+        if (econo_mode)
+            fprintf(prn_stream, "@PJL SET ECONOLEVEL=%d\n", 3 - (int)econo_mode);
+        fprintf(prn_stream, "@PJL SET MEDIATYPE=%s\n", papertypes[paper_type]);
+        fprintf(prn_stream, "@PJL SET SOURCETRAY=%s\n", tray_pjl);
+        fprintf(prn_stream, "@PJL SET RESOLUTION=%d\n", y_dpi);
+
+        fputs("@PJL ENTER LANGUAGE=PCL\n", prn_stream);
+    }
+
+    /* MFC-7360N needs coordinate translation of (-150,0) instead of (-180,0)
+       (X, Y coordinates here are specified in 1/720-inch units) */
+    gs_sprintf(page_init, "\033&l-150U\033*r0F\033&u%dD%s", y_dpi, tray_pcl);
+
+    return dljet_mono_print_page_copies(pdev, prn_stream, num_copies,
+                                        y_dpi, PCL_FEATURES,
+                                        page_init, page_init, false);
+}
+
+static int
+hl1250_put_param_int(gs_param_list * plist, gs_param_name pname,
+                     int *pvalue, int minval, int maxval, int ecode)
+{
+    int code, value;
+
+    code = param_read_int(plist, pname, &value);
+    switch (code) {
+        case 0:
+            if (value < minval || value > maxval)
+                param_signal_error(plist, pname, gs_error_rangecheck);
+            *pvalue = value;
+            return (ecode < 0 ? ecode : 1);
+        case 1:
+            return ecode;
+        default:
+            return code;
+    }
+}
+
+static int
+hl1250_get_params(gx_device * pdev, gs_param_list * plist)
+{
+    gx_device_mfc73x0 *hl1250 = (gx_device_mfc73x0 *) pdev;
+    int code, val;
+
+    code = gdev_prn_get_params(pdev, plist);
+    if (code < 0)
+        return code;
+    val = hl1250->econo_mode;
+    code = param_write_int(plist, "EconoMode", &val);
+    if (code < 0)
+        return code;
+    val = hl1250->paper_type;
+    code = param_write_int(plist, "PaperType", &val);
+    if (code < 0)
+        return code;
+    val = hl1250->source_tray;
+    code = param_write_int(plist, "SourceTray", &val);
+    return code;
+}
+
+static int
+hl1250_put_params(gx_device * pdev, gs_param_list * plist)
+{
+    int code = 0;
+    gx_device_mfc73x0 *hl1250 = (gx_device_mfc73x0 *) pdev;
+    int econo_mode = hl1250->econo_mode;
+    int paper_type = hl1250->paper_type;
+    int source_tray = hl1250->source_tray;
+
+    code = hl1250_put_param_int(plist, "EconoMode", &econo_mode,
+                                ECONO_OFF, ECONO_50, code);
+    code = hl1250_put_param_int(plist, "PaperType", &paper_type,
+                                PTYPE_PLAIN, PTYPE_TRANS, code);
+    code = hl1250_put_param_int(plist, "SourceTray", &source_tray,
+                                TRAY_AUTO, TRAY_MANUAL, code);
+    if (code < 0)
+        return code;
+    code = gdev_prn_put_params(pdev, plist);
+    if (code < 0)
+        return code;
+    hl1250->econo_mode = econo_mode;
+    hl1250->paper_type = paper_type;
+    hl1250->source_tray = source_tray;
+    return 0;
+}
